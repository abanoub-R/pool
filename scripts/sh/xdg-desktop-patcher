#!/bin/bash

## 2023-06-10 #########################################

# Attempts to "patch" .desktop files for terminal apps.
# May or may not be neccesary for your system. I had 
# to make this because my .desktop files just wouldn't
# launch no matter what I did. Maybe its because I use
# gentoo and something got fucked up with XWayland or
# whatever, either way, If I need this, someone out there
# might also need it.

# Based on what I've seen, some GUI apps also may not 
# launch so if you have a potential fix for that and 
# want me to add it here, email me at abrayad07@gmail.com

# This script was written mostly with ChatGPT. I do not take 
# ownership of any of the code written in this file.

# Assign the arguments to variables
mode="$1"

# Check if user ran with all the conditions
check_conditions() {
	# This switches output based on its value
	# t = terminal
	# m = modify
	# h = help
	active_mode="$1"
	
	# Checks arguments for terminal
	if [[ $active_mode == "t"  ]]; then
		# Check if the required arguments are provided
		if [ $# -lt 3 ]; then
  			echo "Insufficient arguments. Usage: $0 terminal [your_terminal] [path_to_desktop_file]"
			exit 1
		fi

		# Check if the script is being run as root
		if [ "$(id -u)" != "0" ]; then
  			echo "This script needs to be run as root."
  			exit 1
		fi
	
	# Checks arguments for modify
	elif [[ $active_mode == "m"  ]]; then
		if [ $# -lt 2 ]; then
			echo "Insufficient arguments. Usage: $0 modify [path_to_desktop_file]"
			exit 1
		fi
	fi

}

# Operating mode, specified in first argument
# Only run for terminal apps
if [[ $mode == "terminal" ]]; then
	
	# See line 24
	check_conditions "t" "$@"

	# Specify arguments
	terminal="$2"
	
	# Search for the file in . and /usr/share/applications
	# If found, set $desktop_file accordingly
	if [[ -f "$3" ]]; then
  		echo "File found in the current directory."
		desktop_file=$3
	else
  		# Search for the file in the /usr/share/applications
  		if [[ -f "/usr/share/applications/$3" ]]; then
  			echo "File found in /usr/share/applications directory."
			desktop_file="/usr/share/applications/$3"
  		else
    			echo "File not found in both the current directory and the alternative directory."
			exit 1
		fi
	fi

	desktop_file_name="$(basename $desktop_file .desktop)"

	# Replace the "Exec=" line with the updated command
	
	# This is a shitty implementation, most terminals
	# allow you to launch them w/ a command, but theres no
	# standard, so if yours doesn't work, my bad, check
	# what your terminal uses since it varies.
	if ! sed -i "s|^Exec=.*|Exec=$terminal -e $desktop_file_name | " "$desktop_file"; then
		echo "Error: Failed to specify terminal execution"
		exit 1
	fi
        
	echo "Updated terminal execution spec."

	# Replace the "Terminal=" line with "Terminal=false"
	if ! sed -i "s|^Terminal=.*|Terminal=false|" "$desktop_file"; then
		echo "Error: Failed to set 'Terminal=' to false"
		exit 1
	fi

	echo "Set Terminal= to false."

# Adds arguments to executable path
elif [[ $mode = "modify" ]]; then

	# See line 24
	check_conditions "m"
	
	# Specify arguments
	desktop_file="$2"

	# Check if the specified .desktop file exists
  	if [[ ! -f $desktop_file ]]; then
    		echo "Error: The specified .desktop file does not exist."
    		exit 1
  	fi

	# This shit too hard man, originally I was going to make
	# it use sed to add the args after the name of exec, but it
	# just won't work so instead i'll just send the user to $EDITOR
	# for the .desktop file given
        
	# Initialize manual editor variable
	editor_manual="vim"

	# Check if the $EDITOR variable is set
	if [[ -z $EDITOR ]]; then
  		echo "The \$EDITOR variable is not set, please type the command for your preferred editor: "
		read $editor_manual
  		export EDITOR="$editor_manual"
	fi

	# Execute editor on file
	"$EDITOR" "$desktop_file"
  	echo "Modified the .desktop file to add arguments."

# Print help
elif [[ $mode == "help" ]]; then
	echo "Usage: "
	echo " xdg-desktop-patcher terminal <your_terminal> <path_to_desktop_file>"
	echo " xdg-desktop-patcher modify <path_to_desktop_file> <arguments>"
	echo " xdg-desktop-patcher help"
	echo "	- terminal : makes .desktop file terminal compatibile"
	echo "  - modify   : adds arguments to Exec="
	echo "  - help     : show this help"
fi
